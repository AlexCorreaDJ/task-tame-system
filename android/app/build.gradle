
apply plugin: 'com.android.application'

android {
    namespace "app.lovable.ebfff8e926ab4767aa4f9feb77a2e287"
    compileSdk rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "app.lovable.ebfff8e926ab4767aa4f9feb77a2e287"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        aaptOptions {
             // Files and dirs to omit from the packaged assets dir, modified to accommodate modern web apps.
             // Default: https://android.googlesource.com/platform/frameworks/base/+/282e181b58cf72b6ca770dc7ca5f91f135444502/tools/aapt/AaptAssets.cpp#61
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
    }
    
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
    
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
            debuggable true
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug // Para builds de teste
        }
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
}

repositories {
    flatDir{
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
    implementation project(':capacitor-android')
    
    // Firebase dependencies for push notifications and balloon-style notifications
    implementation platform('com.google.firebase:firebase-bom:32.7.0')
    implementation 'com.google.firebase:firebase-messaging'
    implementation 'com.google.firebase:firebase-analytics'
    
    // Test dependencies
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
    implementation project(':capacitor-cordova-android-plugins')
}

apply from: 'capacitor.build.gradle'

// Apply Google Services plugin for Firebase
try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.exists()) {
        apply plugin: 'com.google.gms.google-services'
        logger.info("✅ google-services.json found! Firebase configured successfully!")
        logger.info("🔥 Push notifications and FCM are now available!")
    } else {
        logger.info("⚠️ google-services.json NOT found - Firebase features disabled")
        logger.info("📱 Local notifications will still work perfectly!")
    }
} catch(Exception e) {
    logger.info("ℹ️ Firebase not configured - using local notifications only")
}

// Task para build de APK de produção
android.applicationVariants.all { variant ->
    if (variant.name == 'release') {
        variant.assemble.doLast {
            copy {
                from variant.outputs.collect { it.outputFile }
                into "${rootDir}/build/outputs/"
                rename { "TDAHFOCUS-v${variant.versionName}.apk" }
            }
            println "✅ APK gerado em: ${rootDir}/build/outputs/TDAHFOCUS-v${variant.versionName}.apk"
        }
    }
}
